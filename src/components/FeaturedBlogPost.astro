---
import { getReadingTime } from "../utils/getReadingTime";

export interface Props {
  title: string;
  heroImage?: string;
  slug: string;
  pubDate: Date;
  body: string;
  summary: string;
  tags?: Array<string>;
}
const { title, heroImage, pubDate, slug, summary, body, tags } = Astro.props;
const backgroundImage = `url(${heroImage})`;
const url = `/blog/${slug}`;
const date = new Date(pubDate).toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
const finalTags = tags || [];

const readingTime = getReadingTime(body);
---

<a href={url} class="link">
  <div class="container">
    <div class="featured-image"></div>
    <div class="content">
      <h3 class="title">{title}</h3>
      <p class="time">
        {date}
        <span class="dot">â€¢</span>{readingTime} minutes to read
      </p>
      <p>{summary}</p>
      <div class="tags-container">
        {finalTags.map((tag) => <div class="tag">{tag}</div>)}
      </div>
    </div>
  </div>
</a>
<style define:vars={{ backgroundImage }}>
  .link {
    text-decoration: none;
    color: #fff;
  }
  .link:hover {
    text-decoration: none;
  }
  .container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
    background-color: #1f1f1f;
    border-radius: 20px;
    grid-auto-rows: 1fr;
  }
  .content {
    display: flex;
    flex-direction: column;
    gap: 20px;
    padding: 20px 10px;
  }
  .featured-image {
    background-image: var(--backgroundImage);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
  }
  .title {
    font-size: 24px;
    color: #fff;
    font-weight: 700;
    text-decoration: none;
  }
  .time {
    font-size: 14px;
    color: rgb(153, 153, 153);
  }
  .dot {
    margin: 0 4px;
  }
  .tags-container {
    display: flex;
    gap: 6px;
  }
  .tag {
    padding: 0.5px 2px;
    border-radius: 6px;
    border: 1px solid #2c2c2c;
    color: #e6e6e6;
    background-color: #252525;
  }
  :global(.light) .container {
    background-color: #f9f9f9;
    border-color: #ddd;
  }
  :global(.light) .title {
    color: #252525;
  }
  :global(.light) .link {
    color: #252525;
  }
  :global(.light) .tag {
    background-color: #f6f6f6;
    color: #2c2c2c;
    border-color: #ddd;
  }
  @media (max-width: 769px) {
    .container {
      grid-template-columns: 1fr;
    }
  }
</style>
